# KISSMYBLOG
# Maintainer: @_jpb

upstream kissmyblog {
  server unix:/u/apps/kissmyblog/kissmyblog/tmp/sockets/kissmyblog.socket;
}

# Force redirect HTTP to HTTPS without www
server {
  listen 80;
  server_name www.kissmyblog.com kissmyblog.com;
  server_tokens off;
  rewrite ^ https://kissmyblog.com$request_uri? permanent;
}

# Force redirect HTTPS to HTTPS without www
server {
  listen 443 ssl spdy;
  server_name www.kissmyblog.com;
  server_tokens off;
  rewrite ^ https://kissmyblog.com$request_uri? permanent;

  # SSL conf duplicated from below
  # SSL - https://wiki.mozilla.org/Security/Server_Side_TLS
  ssl_certificate /etc/nginx/ssl/kissmyblog-public.crt;
  ssl_certificate_key /etc/nginx/ssl/kissmyblog-private.rsa;

  ssl_session_timeout 5m;
  ssl_session_cache shared:SSL:50m;

  # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
  ## [Optional] Generate a stronger DHE parameter:
  ##   cd /etc/nginx/ssl
  ##   openssl dhparam -out dhparam.pem 4096
  ##
  ssl_dhparam /etc/nginx/ssl/dhparam.pem;

  # Intermediate configuration.
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128:AES256:AES:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK';
  ssl_prefer_server_ciphers on;

  # Enable HSTS
  add_header Strict-Transport-Security "max-age=15768000; includeSubdomains;";

  # OCSP Stapling ---
  # fetch OCSP records from URL in ssl_certificate and cache them
  ssl_stapling on;
  ssl_stapling_verify on;
  ## verify chain of trust of OCSP response using Root CA and Intermediate certs
  ssl_trusted_certificate /etc/nginx/ssl/root_globalsign_ca_cert_plus_intermediates.pem;
  resolver 8.8.4.4 8.8.8.8 valid=300s;
  resolver_timeout 10s;
}

# HTTPS host
server {
  listen 443 ssl spdy;

  server_name kissmyblog.com; # e.g., server_name source.example.com;
  server_tokens off;          # don't show the version number, a security best practice
  root /u/apps/kissmyblog/kissmyblog/public;

  # Increase this if you want to upload large attachments
  client_max_body_size 20m;

  # SSL - https://wiki.mozilla.org/Security/Server_Side_TLS
  ssl_certificate /etc/nginx/ssl/kissmyblog-public.crt;
  ssl_certificate_key /etc/nginx/ssl/kissmyblog-private.rsa;

  ssl_session_timeout 5m;
  ssl_session_cache shared:SSL:50m;

  # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
  # [Optional] Generate a stronger DHE parameter:
  #   cd /etc/nginx/ssl
  #   openssl dhparam -out dhparam.pem 4096
  #
  ssl_dhparam /etc/nginx/ssl/dhparam.pem;

  # Intermediate configuration.
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128:AES256:AES:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK';
  ssl_prefer_server_ciphers on;

  # Enable HSTS
  add_header Strict-Transport-Security "max-age=15768000; includeSubdomains;";

  # OCSP Stapling ---
  # fetch OCSP records from URL in ssl_certificate and cache them
  ssl_stapling on;
  ssl_stapling_verify on;
  ## verify chain of trust of OCSP response using Root CA and Intermediate certs
  ssl_trusted_certificate /etc/nginx/ssl/root_globalsign_ca_cert_plus_intermediates.pem;
  resolver 8.8.4.4 8.8.8.8 valid=300s;
  resolver_timeout 10s;

  # individual nginx logs for this kissmyblog vhost
  access_log  /var/log/nginx/kissmyblog_access.log;
  error_log   /var/log/nginx/kissmyblog_error.log;

  location / {
    # serve static files from defined root folder;.
    # @kissmyblog is a named location for the upstream fallback, see below
    try_files $uri $uri/index.html $uri.html @kissmyblog;
  }

  # If a file, which is not found in the root folder is requested,
  # then the proxy pass the request to the upstream (kissmyblog unicorn)
  location @kissmyblog {
    # If you use HTTPS make sure you disable gzip compression
    # to be safe against BREACH attack
    gzip off;

    # Some requests take more than 30 seconds.
    proxy_read_timeout    300;
    proxy_connect_timeout 300;
    proxy_redirect        off;

    proxy_set_header    Host                $http_host;
    proxy_set_header    X-Real-IP           $remote_addr;
    proxy_set_header    X-Forwarded-Ssl     on;
    proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Proto   $scheme;
    proxy_set_header    X-Frame-Options     SAMEORIGIN;

    proxy_pass http://kissmyblog;
  }

  # Enable gzip compression as per rails guide: http://guides.rubyonrails.org/asset_pipeline.html#gzip-compression
  # WARNING: If you are using relative urls do remove the block below
  # See config/application.rb under "Relative url support" for the list of
  # other files that need to be changed for relative url support
  location ~ ^/(assets)/  {
    root /u/apps/kissmyblog/kissmyblog/public;
    gzip_static on; # to serve pre-gzipped version
    expires max;
    add_header Cache-Control public;
  }

  error_page 502 /502.html;
}
